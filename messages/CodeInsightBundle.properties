intention.implement.abstract.class.default.text=实现抽象类
dialog.create.field.from.parameter.field.name.label=名称:
javadoc.action.view.external=查看外部文档
javadoc.documentation.not.found.title=没有文档
intention.join.declaration.family=加入宣言和赋值
unwrap.while=开启 'while...'
livetemplate.description.itar=遍历数组元素
rename.file.reference.family=重命名参考文件
i18nize.empty.file.path=请指定属性的文件路径
livetemplate.description.toar=存储元素的java跑龙套.收集到数组
insert.code.template.command=插入代码模板
unwrap.braces=开启 braces
livetemplate.description.surround.braces=环绕用{}
node.abstract.flag.tooltip=抽象的
reformat.progress.common.text=格式化代码...
livetemplate.description.sout=打印一个字符串到System.out
intention.assign.field.from.parameter.text=分配参数字段"{0}"
livetemplate.description.surround.parens=环绕用()
intention.invert.if.condition=转化如果条件
template.shortcut.space=空格
intention.settings=意图
livetemplate.description.souf=打印一个格式化字符串到System.out
reformat.option.vcs.changed.region=仅VCS改变的文本 (&V)
dialog.intention.settings.description.panel.title=描述
dialog.reformat.files.optimize.imports.checkbox=优化导入 (&O)
error.cannot.resolve.class=无法解析类''{0}''
intention.replace.cast.with.var.text=用"{1}"替换"{0}"
i18nize.dialog.error.property.already.defined.message=属性''{0}''已经在文件''{1}''中存在
i18n.quickfix.property.panel.update.all.files.in.bundle.checkbox=更新资源包中的所有属性文件(R)
 (&R)
highlight.imported.members.chooser.title=选择导入高亮的成员
intention.extract.if.condition.text=提取if({0})
javadoc.type.parameters=类型参数:
rename.file.reference.text=重命名文件引用到{0}
quickfix.i18n.concatentation.error=字符串连接没有找到
copy.abstract.method.no.existing.implementations.found=没有找到现有的实现
node.interface.tooltip=接口
templates.select.template.chooser.title=选择模版
intention.break.string.on.line.breaks.text=打破字符串 '\n'
intention.create.test.dialog.language=语言:
goto.test.notFound=没有测试对象发现
templates.dialog.shortcut.chooser.label=默认展开与
command.name.typing=输入
inspection.i18n.option.ignore.comment.pattern=忽略线路包含该评论(模式在java跑龙套.模式格式):
javadoc.info.title=文档为{0}
inspection.i18n.option.ignore.nonalphanumerics=忽略文字不包含字母字符
i18nize.error.title=不能I18nize选择
dialog.edit.template.checkbox.reformat.according.to.style=根据风格重新格式化(&R)
dialog.intention.settings.intention.list.title=意向名单
templates.settings.page.title=活动模板
intention.split.declaration.text=拆分为分开的声明
error.cannot.resolve.0.1=无法解析{0} { 1 }
unwrap.array.initializer=开启数组初始值设定项
dialog.create.field.from.parameter.title=创建字段
generate.setter.fields.chooser.title=选择字段生成setter
goto.implementation.notFound=没有实现发现
progress.text.optimizing.imports=优化导入...
unwrap.synchronized=开启 'synchronized...'
inspection.i18n.quickfix.annotate.element.as=注释{0} ''{1}'' 为 @{2}
reformat.code.accept.button.text=运行
templates.dialog.edit.variables.table.column.default.value=默认值
node.exception.tooltip=异常
node.enum.tooltip=枚举
inspection.i18n.option.ignore.for.exception.constructor.arguments=忽略异常构造函数参数:
livetemplate.description.psfs=公共静态最终字符串
set.language.level.to.0=设置语言级别为{0}
reformat.and.optimize.progress.common.text=准备导入...
livetemplate.description.itve=遍历java.util.Vector元素
intention.create.test.dialog.choose.super.class=选择超类
javadoc.since=自从:
error.unknown.enum.value.message=未知的枚举值''{0}''
intention.override.method.text=重写方法 ''{0}''
livetemplate.description.ittok=迭代标记从字符串
inspection.i18n.option.ignore.tostring=忽略toString()方法的内容
paste.data.flavor.folding=折叠数据
generate.equals.hashcode.use.getters=在代码生成过程中使用 &getters
livetemplate.description.psfi=公共静态最终int
intention.create.test.dialog.class.name=类名：
intention.add.annotation.family=添加注释
livetemplate.description.surround.cdata.in.xmlorhtmlorjsp=环绕用CDATA
no.documentation.found=没有发现文档.
coverage.button.add.package=添加包
intention.implement.abstract.class.interface.text=实现接口
goto.test.findUsages.subject.title=测试对象为{0}
intention.assign.field.from.parameter.family=分配参数场
i18nize.error.message=你只能i18nize Java字符串或者子串之.请点插入符号在Java字符串或选择它的一部分.
i18nize.jsp.error=请选择JSP文本i18nize。
确保你没有选择任何脚本，自定义标签或其它语言元素。
同时，HTML标签里面选择必须是平衡的。
create.directory.text=创建目录{0}
livetemplate.description.surround.tag.in.htmlorjsp=环绕用<标签></标签>在HTML/JSP
rename.element.family=重命名元素
override.implement.broken.file.template.title=文件模板错误
highlight.exceptions.thrown.chooser.title=选择异常类以高亮显示
coverage.pattern.filter.editor.choose.package.title=选择包
error.attempt.to.generate.constructor.for.anonymous.class=不能添加构造函数到匿名类
livetemplate.description.soutv=打印一个值System.out
title.remove.coverage.data=移除覆盖率数据
livetemplate.description.if.not.null=插入''if not null''语句
rename.named.element.text=将''{0}''重命名为''{1}''
livetemplate.description.soutp=打印方法参数的名称和值到System.out
livetemplate.description.soutm=打印当前的类名和方法名到System.out
generate.equals.hashcode.internal.error=内部错误
javadoc.external.fetch.error.message=无法获取远程文件:{0}
process.scope.directory=目录 ''{0}''
intention.intercept.ejb.method.or.class.method.text=对业务方法添加拦截"{0}"
templates.dialog.edit.variables.action.move.down=下移 (&D)
intention.implement.abstract.method.searching.for.descendants.progress=寻找的后代...
generate.getter.fields.chooser.title=选择字段生成getter
templates.postfix.settings.category.after=后缀完成调用的结果将显示在这里。
progress.reformat.stage.processing.blocks=计算更改...
intention.underscores.in.literals.family=凸显了在数字字面值
generate.equals.and.hashcode.already.defined.warning=除它们,继续吗?
deannotate.intention.chooser.title=选择要删除的注释
livetemplate.description.lazy=执行延迟初始化
node.final.flag.tooltip=最后的
templates.surround.no.defined=在此上下文环境，还没有定义环绕模板。
progress.reformat.stage.expanding.children.indents=扩大必要的子项缩进
dialog.import.on.paste.title2=选择要导入的元素
templates.dialog.table.column.active=活跃
intention.split.if.family=分裂如果
goto.super.method.chooser.title=选择父类方法
dialog.edit.template.error.title=无法保存
create.file.family=创建文件
title.popup.show.coverage=覆盖率套房
create.directory.command=创建目录
unwrap.if=开启 'if...'
status.bar.highlighted.usages.not.found.no.target.message=未找到用法
generate.equals.hashcode.equals.fields.chooser.title=选择要被包含在equals()中的字段(f)
 (&F)
i18nize.dialog.error.jdk.title=类未找到
intention.error.cannot.create.class.title=创建类失败
templates.dialog.edit.variables.action.move.up=上移 (&U)
intention.extract.if.condition.family=提取if条件
dialog.edit.live.template.title=编辑活动模板
macro.enum=枚举(...)
goto.super.method.of.chooser.title=选择 {0} 的超级方法
intention.move.initializer.to.set.up=初始化设置移动方法
generate.getter.setter.title=选择字段生成getter和setter
highlight.imported.classes.chooser.title=选择导入高亮的类
override.implement.broken.file.template.message=请正确"覆盖/实现方法主体"模板
dialog.edit.template.checkbox.shorten.fq.names=缩短浆名称(
generate.delegate.target.chooser.title=选择目标生成的代表
error.dialog.readonly.files.title=无法修改只读文件
surround.with.synchronized.template=同步
generate.delegate.method.chooser.title=选择的方法来生成代表名额
inspection.unresolved.property.key.reference.message=字符串文字"{0}"不似乎是有效的属性键
dialog.edit.template.label.group=组: (&G)
multiple.implementations.tooltip=多个实现
enable.intention.action=启用''{0}''
i18nize.dialog.error.jdk.message=找不到类'java.util.ResourceBundle'。请正确安装JDK 。
livetemplate.description.ritar=反序遍历数组元素
i18n.quickfix.code.panel.resource.bundle.expression.label=资源绑定表达式:(&E)
copy.abstract.method.popup.title=选择要复制的实现
process.scope.changed.files=只处理 VCS 更改的文件
template.shortcut.tab=选项卡
javadoc.throws=抛出：
rename.file.fix=重命名文件
macro.classname=类名()
remove.annotation=移除注释
node.class.tooltip=类
configure.code.style.on.fragment.dialog.progress.text=影响选定代码片段的过滤设置…
intention.convert.to.basic.latin=转换为基本的拉丁
display.coverage.prompt=您要显示覆盖率数据"{0}"吗？
searching.for.implementations=寻找实现...
templates.dialog.edit.variables.table.column.skip.if.defined=跳过如果定义
generate.equals.and.hashcode.error.no.object.class.message=无法生成equals()和hashCode()。未找到java.lang.Object类。
intention.color.chooser.dialog=选择颜色
javadoc.action.back=向后
dialog.create.class.destination.package.label=目标包：
quick.definition.edit.source=编辑源代码
javadoc.description.copied.from.interface=描述复制从接口:
declaration.navigation.title=选择声明
intention.create.test.dialog.select.methods=生成的测试方法:
progress.reformat.and.optimize.common.command.text=格式化并优化导入
i18n.quickfix.property.panel.property.value.label=属性值:(&V)
inspection.i18n.option.ignore.property.keys=忽略文字具有价值等于现有的属性键
templates.dialog.table.column.description=描述
inspection.i18n.option.ignore.for.specified.exception.constructor.arguments=忽视对指定的异常构造函数参数
generate.equals.and.hashcode.error.no.object.class.title=没有java.lang.Object
livetemplate.description.surround.tag=环绕用<标签></标签>
livetemplate.description.surround.with.callable=环绕用Callable
unwrap.else=开启 'else...'
intention.bind.fields.from.parameters.family=绑定参数字段
unwrap.anonymous=开启 'anonymous...'
process.reformat.code=重新格式化代码
intention.move.initializer.to.constructor=移动到构造函数初始化器
generate.equals.hashcode.non.null.fields.chooser.title=选择所有非空字段 (&F)
inspection.invalid.resource.bundle.reference=无效的资源束参考"{0}"
dialog.create.class.label=创建{0}:
rename.public.class.text=将类''{0}''重命名为''{1}''
generate.equals.hashcode.accept.sublcasses=接受子类作为参数equals()方法(
remove.else=移除 'else...'
intention.create.field.from.parameter.text=创建字段参数"{0}"
progress.reformat.stage.wrapping.blocks=准备中...
intention.implement.abstract.class.family=实现抽象类或接口
javadoc.method.specified.by=指定的:
class.completion.file.path.all.variants=按{0}搜索匹配任何类型的文件
unwrap.with.placeholder=开启 ''{0}''
dialog.create.field.from.parameter.field.type.label=字段的类型:
unwrap.popup.title=选择开启/移除的声明
reformat.option.selected.text=选中文本 (&S)
dialog.import.on.paste.title=选择要导入的类
intention.replace.concatenation.with.formatted.output.family=更换连接与格式化输出
i18nize.error.creating.properties.file=错误创建属性文件
node.anonymous.class.tooltip=匿名类
dialog.reformat.files.reformat.selected.files.label=格式化选中的文件?
highlight.thrown.exceptions.chooser.all.entry=所有列出的
intention.create.test=创建测试
coverage.data.not.found=未找到覆盖率数据
intention.replace.cast.with.var.family=用变量替换转换
generate.list.popup.title=生成
dialog.reformat.files.title=格式文件
javadoc.see.also=请参阅:
dialog.edit.template.label.abbreviation=缩写: (&A)
configure.code.style.on.fragment.dialog.progress.text.under=按“跳过”显示所有设置
generate.constructor.fields.chooser.title=选择字段以便构造器初始化
dialog.create.class.name=创建{0}{1}
surround.with.chooser.title=环绕用
copy.abstract.method.intention.name=使用现有实现''{0}''
livetemplate.description.itli=遍历java.util.List元素
inspection.error.dialog.title=错误
intention.create.test.dialog.testing.library=测试库:
paste.dataflavor.referencedata=参考数据
property.has.more.parameters.than.passed=属性"{0}"预期的{1}{1,选择,1
livetemplate.description.tag.pair=一对标签
prompt.remove.coverage=你要删除"{0}"覆盖率数据吗?
node.static.flag.tooltip=静态
class.completion.file.path=按{0}再次搜索所有匹配的项目文件
create.file.text=创建文件{0}
error.cannot.resolve.default.message=无法解析符号''{0}''
intention.convert.color.representation.family=转换颜色表示
inspection.i18n.display.name=硬编码字符串
copy.abstract.method.title=使用抽象方法实现
templates.dialog.table.column.abbreviation=缩写
livetemplate.description.st=字符串
#javadoc.method.overrides=重写:
livetemplate.description.surround.with.write.lock=环绕用ReadWriteLock.writeLock
templates.no.defined=没有模板定义在这个上下文
no.methods.overriding.0.are.found=没有重写方法 {0, 选择, 0#|1# '{1}'|2#these classes} 被发现
unwrap.for=开启 'for...'
inspection.i18n.option.ignore.qualified.class.names=忽略文字具有价值等于现有的完全限定类名
i18n.quickfix.preview.panel.title=预览
under.construction.string=在构造器下
i18n.quickfix.property.panel.title=属性信息
template.next.variable.command=转到下一个代码模板选项卡
intention.implement.abstract.method.command.name=实现方法
javadoc.returns=返回:
process.optimize.imports=优化导入
intention.create.test.dialog.fix.library=修复
quick.definition.show.source=显示源代码
intention.add.single.member.static.import.text=添加静态导入"{0}"
intention.split.declaration.assignment.text=拆分为声明和赋值
inspection.i18n.message.general.with.value=硬编码字符串:{0}
surround.with.try.catch.incorrect.template.message=无效的文件模板,用于catch body
intention.create.test.dialog.show.inherited=显示继承的方法
quickfix.add.variable.text=初始化变量 ''{0}''
dialog.create.field.from.parameter.already.exists.title=字段已经存在
node.method.tooltip=方法
goto.test.findUsages.test.title=测试为{0}
methods.to.implement.chooser.title=选择实现的方法
highlight.exceptions.thrown.notfound=没有在该方法抛出的异常发现
process.optimize.imports.before.commit=提交前优化导入
set.language.level=设置语言级别
intention.implement.abstract.method.class.chooser.title=选择实现类
livetemplate.description.itit=迭代java util迭代器
intention.intercept.ejb.method.or.class.class.text=添加拦截器对EJB类"{0}"
choose.type.popup.title=选择类型
process.scope.file=文件{0} (&F)
intention.add.on.demand.static.import.text=对需求添加静态导入"{0}"
inspection.i18n.quickfix.annotate.as=注释为 @{0}
intention.intercept.ejb.method.or.class.family=添加EJB拦截器
unwrap.conditional=开启 'f ? a : b'
dialog.edit.template.label.expand.with=展开与 (&X)
i18nize.dialog.property.file.chooser.title=选择属性文件
goto.super.property.chooser.title=选择超级属性
i18n.quickfix.property.panel.properties.file.label=属性文件:(&P)
intention.replace.concatenation.with.formatted.output.text=用'java.text.MessageFormat.format()'替换'+'
livetemplate.description.serr=打印一个字符串到System.err
intention.edit.interceptor.binding.family=拦截器绑定
process.scope.module=模块 ''{0}''
reformat.option.all.files.in.directory=目录内所有文件{0} (&A)
dialog.intention.settings.description.usage.example.title=使用例子
intention.error.cannot.create.class.message=无法创建类"{0}"
template.previous.variable.command=转到上一个代码模板选项卡
cast.expression=强制转换表达式
process.scope.project=项目 ''{0}''
livetemplate.description.geti=插入单例方法getInstance
node.excluded.flag.tooltip=排除
intention.create.test.dialog.generate=生成:
node.field.tooltip=字段
highlight.overridden.classes.chooser.title=从...选择高亮重写方法的类
quick.definition.back=后退
intention.edit.interceptor.binding.text=编辑拦截"{0}"绑定
i18nize.dialog.template.link.label=编辑I18n模板
methods.to.override.chooser.title=选择要重写的方法
i18nize.cant.create.properties.file.because.its.name.is.associated=不能创建属性文件"{0}",因为它的名字是相关的{1}.
inspection.i18n.option.ignore.assert=忽略断言语句参数
dialog.edit.template.error.malformed.abbreviation=不能保存模板.模板缩写应该只包含字母,数字和连字符,点.
templates.dialog.edit.variables.border.title=变量
dialog.edit.template.context.title=上下文
intention.implement.abstract.class.subclass.text=创建子类
reformat.option.optimize.imports=优化导入 (&O)
javadoc.description.copied.from.class=描述复制从类:
generate.equals.and.hashcode.already.defined.title=生成equals()和hashCode()
process.rearrange.code.before.commit=收到的Rearrange双赢的守则
intention.implement.abstract.method.family=实现抽象方法
intention.convert.color.representation.text=转换为"新颜色{0}"
templates.postfix.settings.category.before=示例代码中选择模板将显示在这里。现货现货显示闪烁的矩形意图适用的地方。
javadoc.documentation.not.found.message=对于这个元素的文档是没有找到.请添加所有需要的路径到API文档在项目设置.
generate.equals.hashcode.hashcode.fields.chooser.title=选择要被包含在hashCode()中的字段(&F)
disable.intention.action=禁用''{0}''
inspection.unresolved.property.key.reference.name=无效属性健
intention.add.on.demand.static.import.family=对需求添加静态导入
livetemplate.description.inst=检查对象类型和运算符和下投下它
intention.implement.abstract.method.error.no.classes.message=没有发现这类方法可以实现
template.shortcut.enter=确定
i18n.quickfix.property.panel.property.key.label=属性键:(&K)
livetemplate.description.lst=获取数组的最后一个元素
command.name.surround.with.runtime.cast=环绕用运行时转换
dialog.create.field.from.parameter.declare.final.checkbox=声明final (&F)
error.dialog.readonly.file.title=文件是只读的
livetemplate.description.psf=公共静态最终
finish.template.command=完成模板
incremental.search.tooltip.prefix=搜索：
dialog.create.field.from.parameter.already.exists.text=使用现有字段"{0}"？
intention.add.single.member.import.text=添加导入"{0}"
templates.dialog.edit.variables.table.column.expression=表达式
reformat.progress.file.with.known.name.text=格式化中{0}
i18nize.dialog.error.property.already.defined.title=属性已经存在
livetemplate.description.mx=设置变量更大的价值
error.cannot.convert.default.message=无效的值:''{0}''
intention.create.field.from.parameter.family=创建字段参数
livetemplate.description.iter=迭代数组在J2SDK Iterable | 5.0语法
livetemplate.description.iten=迭代java util枚举
reformat.directory.dialog.options=选项
livetemplate.description.mn=集较小值给一个变量
dialog.add.live.template.title=添加活动模板
javadoc.resolved.value=解析值:
dialog.edit.template.checkbox.smart.type.completion=智能类型完成(o)
 (&O)
quick.definition.forward=前进
error.hint.file.is.readonly=文件{0}是只读的
intention.add.single.member.static.import.family=添加单一静态导入
lightbulb.tooltip=单击或按{0}
intention.move.field.assignment.to.declaration=移动指派到字段声明
quickfix.add.variable.family.name=初始化变量
javadoc.action.forward=向前
coverage.data.outdated=覆盖率数据已过期
generate.equals.and.hashcode.already.defined.warning.anonymous=方法的布尔equals(对象)"和"int hashCode()"已经definedfor这个匿名类.你想删除它们,继续吗?
process.rearrange.code=重新编码…
powered.by=启动by
templates.dialog.edit.variables.table.column.name=名称
inspection.i18n.option.ignore.for.junit.assert.arguments=忽视对JUnit断言参数
surround.with.try.catch.incorrect.template.title=环绕用try-catch
node.annotation.tooltip=注释
intention.introduce.variable.text=引入局部变量
intention.split.if.text=分成2如果的
reformat.option.include.subdirectories=包含子目录 (&I)
configure.code.style.on.fragment.dialog.cancel=跳过
no.coverage=没有覆盖
livetemplate.description.if.null=插入''if null''语句
dialog.edit.template.template.text.title=模板文本:(&T)
intention.implement.abstract.method.text=实现方法 ''{0}''
generate.equals.warning.generated.equals.could.be.incorrect=生成的Object[]的equals()可能不正确
intention.insert.literal.underscores=插入到文字的下划线
intention.join.declaration.text=加入宣言和赋值
livetemplate.description.itover=遍历一个数组选择J2SDK Iterable或在5.0语法
configure.code.style.on.fragment.dialog.title=调整代码样式设置
cast.to.0=转换为''{0}''
dialog.edit.template.checkbox.use.static.import=如果可能，使用静态导入(i)
 (&I)
intention.remove.literal.underscores=移除下划线文字
methods.to.override.implement.chooser.title=选择覆盖/实施的方法
livetemplate.description.itco=遍历java.util.Collection元素
dialog.edit.template.shortcut.default=默认({0})
intention.implement.abstract.method.error.no.classes.title=没有找到的类
livetemplate.description.surround.with.read.lock=环绕用ReadWriteLock.readLock
inspection.i18n.option.ignore.comment.title=非nls评论模式
intention.encapsulate.field.text=封装领域
intention.create.test.dialog.super.class=超类:
dialog.edit.template.options.title=选项
dialog.copy.live.template.title=复制活动模板
unwrap.try=开启 'try...'
javadoc.error.resolving.url=无法解析 URL <i>{0}</i> <p>配置路径的API文档在 <a href="open://Project Settings">项目设置</a>中可能有帮助
generate.constructor.super.constructor.chooser.title=选择超级类构造器
reformat.option.rearrange.entries=重新排序条目 (&R)
javadoc.fetching.progress=读取文档...
intention.surround.resource.with.ARM.block=环绕用try-with-resources
dialog.edit.template.error.already.exists=不能保存模板.模板与缩写"{0}"已经存在于集团"{1}".请选择一个不同的缩写或组.
reformat.directory.dialog.filters=过滤器
dialog.edit.template.label.description=描述: (&D)
intention.split.declaration.family=拆分声明
templates.dialog.edit.variables.title=编辑模板变量
inspection.i18n.option.ignore.assigned.to.constants=忽略文字分配常数
code.coverage=代码覆盖率
goto.super.class.chooser.title=选择父类或接口
generate.equals.hashcode.wizard.title=生成equals()和hashCode()
remove.catch=移除 'catch...'
code.coverage.is.not.supported=代码覆盖率支持jre 5.0或更高
process.reformat.code.before.commit=提交前格式化代码
javadoc.deprecated=过时的
progress.reformat.stage.applying.changes=存储变更...
dialog.create.class.package.chooser.title=选择目标包
create.tagfile.text=创建标记文件{0}
dialog.edit.template.button.edit.variables=编辑变量 (&E)
javadoc.parameters=参数:

jsp.documentation.message.custom.attribute.name=自定义属性名称
psi.search.scope.project=项目文件
el.identifier.expected=标识符是预期的
anonymous.class.context.display=匿名在{0}
default.visibility.presentation=默认
jsp.documentation.message.custom.function.name=自定义函数名称
abstract.visibility.presentation=抽象
el.cannot.resolve.function=不能解决函数 ''{0}'' #loc
native.visibility.presentation=本地的
el.declare.variable.via.usebean.intention.name=声明外部变量作为<jsp:useBean />
code.display=代码
psi.search.for.word.progress=搜索{0}...
psi.search.inheritors.of.class.progress=寻找{0}的继承者...
el.value.expected=值是预期的
jsp.documentation.message.type=类型: {0}
cannot.delete.a.read.only.file=无法删除只读文件 ''{0}''.
el.cannot.resolve.method=不能解决方法 ''{0}''() #loc
cannot.modify.a.read.only.directory=无法修改只读目录 ''{0}''.
jsf.method.call.is.nonstd.extension=方法调用是标准扩展 #loc
psi.search.scope.test.files=项目测试文件
transient.visibility.presentation=暂时的
jsp.documentation.message.description=描述: {0}
el.declare.variable.intention.family=声明变量作为外部数据
jsp.taglib.method.reference.error.different.return.type=不同的返回类型
volatile.visibility.presentation=易变的
local.class.preposition=本地
public.visibility.presentation=公共
el.cannot.resolve.property=能解决属性或方法''{0}''(动态属性吗?) #loc
jsp.taglib.method.reference.error.signature.is.different=签名是不同的
psi.search.in.non.java.files.progress=分析代码无关的用法...
static.visibility.presentation=静态
anonymous.class.derived.display=匿名类派生从{0}
default.path.evaluator.option=告诉基准提供程序,如何评估给定文件的默认路径
search.scope.module=模块''{0}''
enum.constant.context=枚举常数 ''{0}'' 在 ''{1}''
private.visibility.presentation=私有
jsp.documentation.message.required=必选: {0}
codestyle.cannot.save.settings.directory.cant.be.created.message=不能保存代码风格方案.目录{0}不能被创建.
qualified.resolve.class.reference.provider.option=告诉基准提供程序,过程只有合格类引用(如:不解决字符串作为java.lang.String)
psi.scanning.files.progress=扫描文件...
packageLocal.visibility.presentation=局部包
el.expression.expected=表达式是预期的
strictfp.visibility.presentation=静态
jsp.taglib.method.reference.error.class.is.not.valid=类无效
jsp.taglib.method.reference.error.no.such.method=没有这样的方法
search.scope.module.runtime=模块 ''{0}'' 运行时范围
cannot.modify.a.read.only.file=无法修改只读文件 ''{0}''.
codestyle.cannot.save.scheme.file=不能保存代码风格方案{0}.{1}
psi.search.scope.project.and.libraries=项目和库
el.declare.variable.via.comment.annotation.intention.name=声明外部变量在注释
code.from.context.display=代码从{0}
anonymous.class.display=匿名类
protected.visibility.presentation=受保护
jsp.documentation.message.fragment=片段: {0}
cannot.resolve.symbol=不能解决符号 ''{0}''
el.unexpected.end.of.file=意外的文件结尾
psi.error.incorrect.class.template.message=不能创建{0} - {1}模板不正确。
el.declare.variable.find.acceptable.class=找到可接受的类
el.cannot.resolve.variable=不能解决变量 ''{0}'' #loc
jsp.documentation.message.example.of.use=例子 of use:<br><pre>{0}</pre>
el.cannot.resolve.namespace=不能解决命名空间 ''{0}'' #loc
synchronized.visibility.presentation=同步
jsp.documentation.message.can.have.runtime.value=可以运行时的值: {0}
psi.search.scope.production.files=项目生产文件
codestyle.cannot.save.settings.directory.cant.be.created.title=无法保存设置
jsp.documentation.message.custom.tag.name=自定义标记名
psi.search.inheritors.progress=寻找继承者...
jsp.taglib.method.reference.error.method.should.be.public.or.static=方法应该是公共或静态的
jsp.taglib.method.reference.error.class.is.not.public=类不是公共的
final.visibility.presentation=最终
el.mismatched.parameters.count=不同数量的正式和实际参数
invalid.regular.expression.message=无效的正则表达式{0}
